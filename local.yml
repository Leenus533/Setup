- hosts: localhost
  pre_tasks:
    # - name: Update apt cache
    #   apt:
    #     update_cache: true
    #   tags:
    #     - always
    #     - node
    #     - zsh
  vars:
    ansible_user: "{{ lookup('env', 'USER') }}"
    source_key: "./.ssh/id_ed25519"
    dest_key: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519"
  vars_prompt:
    - name: "my_password"
      prompt: "Enter password"
      private: yes
  tasks:
    - name: Install zsh
      apt:
        name: zsh
      tags: zsh

    - name: Check if /usr/bin/zsh exists
      stat:
        path: /usr/bin/zsh
      register: zsh_stat
      tags: zsh

    - name: Check oh_my_zsh exists
      stat:
        path: /home/{{ ansible_user }}/.oh-my-zsh
      register: oh_my_zsh_stat
      tags: zsh

    - name: Change shell directly in /etc/passwd
      expect:
        command: "chsh -s /usr/bin/zsh"
        responses:
          (?i)password: "{{ my_password }}"
      when: not zsh_stat.stat.exists
      tags: zsh

    - name: Install oh-my-zsh
      shell: curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh > ~/.oh-my-installer && chmod +x ~/.oh-my-installer && ~/.oh-my-installer
      when: not oh_my_zsh_stat.stat.exists
      tags: zsh

    - name: Install zsh plugins
      ansible.builtin.git:
        repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
        dest: "~/.oh-my-zsh/plugins/zsh-autosuggestions"
      tags: zsh

    - name: update zshrc
      blockinfile:
        path: ~/.zshrc
        block: |
          plugins=(git zsh-autosuggestions)
      tags: zsh

    - name: Install node
      apt:
        name: [nodejs, npm]
      tags: node

    - name: Install n
      npm:
        name: n
        global: true

    - name: Install latest node
      shell: n latest
      tags: node

    - name: Ensure .ssh directory exists.
      become_user: root
      file:
        dest: "{{ dest_key | dirname }}"
        mode: 0700
        state: directory
      tags:
        - dotfiles
        - ssh

    - name: Install ssh key
      become_user: root
      copy:
        src: "{{ source_key }}"
        dest: "{{ dest_key }}"
        mode: 0600
      tags:
        - dotfiles
        - ssh

    - name: Set authorized key took from file
      authorized_key:
        user: "{{ lookup('env', 'USER') }}"
        state: present
        key: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519.pub"
      tags:
        - dotfiles
        - ssh
