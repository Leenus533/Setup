- name: Install feh
  become: true
  package:
    name: feh
    state: present
  when: ansible_distribution != "MacOSX"

- name: Copy background to /usr/share/backgrounds/
  become: true
  shell:
    cmd: cp ./background.png /usr/share/backgrounds/
  when: ansible_distribution != "MacOSX"

- name: Swap image names
  command: mv /usr/share/backgrounds/{{ item.old }} /usr/share/backgrounds/{{ item.new }}
  loop:
    - { old: "blackcat.jpg", new: "i3_default_background.jpg.tmp" }
    - { old: "i3_default_background.jpg", new: "blackcat.jpg" }
    - { old: "i3_default_background.jpg.tmp", new: "i3_default_background.jpg" }
  become: true
  tags: background
  when: ansible_distribution == "Archlinux"
  ignore_errors: true

- name: Enable and start systemd-timesyncd service
  become: true
  systemd:
    name: systemd-timesyncd
    state: started
    enabled: yes
  ignore_errors: true
  when: ansible_distribution == "Archlinux"

- name: Install alacritty, neovim
  become: yes
  become_user: "{{ ansible_user_id if ansible_distribution == 'MacOSX' else omit}}"
  package:
    name:
      - alacritty
      - neovim
      - curl
      - ca-certificates
      - apt-transport-https
    state: present
  ignore_errors: yes

- name: Install wmctrl
  become: true
  package:
    name: wmctrl
    state: present
  when: ansible_distribution != "MacOSX"

- name: Install nordvpn
  become: true
  shell:
    cmd: sh <(curl -sSf https://downloads.nordcdn.com/apps/linux/install.sh)
  args:
    executable: /bin/bash
  tags: nord

- name: Update apt cache and install common dependencies
  become: true
  apt:
    update_cache: yes
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - wget
      - apt-transport-https
    state: present

- name: Create keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Download Docker GPG key
  become: true
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc

- name: Download Brave GPG key
  become: true
  get_url:
    url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
    dest: /usr/share/keyrings/brave-browser-archive-keyring.gpg

- name: Download Microsoft GPG key
  become: true
  ansible.builtin.shell:
    cmd: |
      wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/keyrings/packages.microsoft.gpg

- name: Set permissions for Docker GPG key
  become: true
  file:
    path: /etc/apt/keyrings/docker.asc
    mode: "0644"

- name: Set permissions for Brave GPG key
  become: true
  file:
    path: /usr/share/keyrings/brave-browser-archive-keyring.gpg
    mode: "0644"

- name: Set permissions for Microsoft GPG key
  become: true
  ansible.builtin.file:
    path: /etc/apt/keyrings/packages.microsoft.gpg
    mode: "0644"

- name: Add Docker and Brave repositories
  become: true
  apt_repository:
    repo: "{{ item.repo }}"
    state: present
    filename: "{{ item.filename }}"
  loop:
    - {
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu noble stable",
        filename: "docker",
      }
    - {
        repo: "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main",
        filename: "brave-browser-release",
      }
    - {
        repo: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main",
        filename: "vscode",
      }

- name: Install Docker and Brave browser
  become: true
  apt:
    update_cache: true
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - brave-browser
      - code
    state: present
